{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/feedback/feedback.component.css","webpack:///./src/app/feedback/feedback.component.html","webpack:///./src/app/feedback/feedback.component.ts","webpack:///./src/app/forminput1/forminput1.component.css","webpack:///./src/app/forminput1/forminput1.component.html","webpack:///./src/app/forminput1/forminput1.component.ts","webpack:///./src/app/forminput2/forminput2.component.css","webpack:///./src/app/forminput2/forminput2.component.html","webpack:///./src/app/forminput2/forminput2.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Forminput1Component } from \"src/app/forminput1/forminput1.component\";\nimport { Forminput2Component } from \"src/app/forminput2/forminput2.component\";\nimport { FeedbackComponent } from \"src/app/feedback/feedback.component\";\n\nconst routes: Routes = [\n  { path: '',component: Forminput1Component },\n  { path: 'part2',component: Forminput2Component },\n  { path: 'feedback',component: FeedbackComponent }  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { Forminput1Component } from './forminput1/forminput1.component';\nimport { Forminput2Component } from './forminput2/forminput2.component';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport {HttpModule} from '@angular/http'\nimport {FormsModule} from '@angular/forms'\n@NgModule({\n  declarations: [\n    AppComponent,\n    Forminput1Component,\n    Forminput2Component,\n    FeedbackComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"Congratulations {{ formData.firstName }}  {{ formData.lastName }}, your formData has been submitted with the folllowing details\\n  \\n  <h1>Summary</h1>\\n  <ul>\\n    <li>Gender: {{ formData.gender }}</li>\\n    <li>Age:  {{ formData.age }}</li>\\n    <li>Number of Tickets: {{ formData.numberOfTickets }}</li>\\n  </ul>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\n\n\n  export class FeedbackComponent implements OnInit {\n    formData = {}\n    constructor(private http:HttpService) { }\n  \n    ngOnInit() {\n      this.formData = this.http.getForm()\n      console.log(this.formData)\n    }\n  }","module.exports = \"\"","module.exports = \"<form #formpart1=\\\"ngForm\\\" (ngSubmit)=\\\"signin(formpart1)\\\">\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">First Name</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"First Name\\\" ngModel name=\\\"firstName\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Last Name</label>\\n    <div class=\\\"col-sm-10\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"Last Name\\\" ngModel name=\\\"lastName\\\">\\n    </div>\\n  </div>\\n  <fieldset class=\\\"form-group\\\">\\n    <div class=\\\"row\\\">\\n      <legend class=\\\"col-form-label col-sm-2 pt-0\\\">Gender</legend>\\n      <div class=\\\"col-sm-10\\\">\\n        <div class=\\\"form-check\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"gender\\\" id=\\\"gridRadios1\\\" value=\\\"Male\\\" ngModel checked>\\n          <label class=\\\"form-check-label\\\" for=\\\"gridRadios1\\\">\\n            Male\\n          </label>\\n        </div>\\n        <div class=\\\"form-check\\\">\\n          <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"gender\\\" id=\\\"gridRadios2\\\" value=\\\"Female\\\" ngModel>\\n          <label class=\\\"form-check-label\\\" for=\\\"gridRadios2\\\">\\n            Female\\n          </label>\\n        </div>\\n      \\n      </div>\\n    </div>\\n  </fieldset>\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"col-sm-10\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">next</button>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n\n@Component({\n  selector: 'app-forminput1',\n  templateUrl: './forminput1.component.html',\n  styleUrls: ['./forminput1.component.css']\n})\nexport class Forminput1Component implements OnInit {\n\n  constructor(private router:Router,private http:HttpService) { }\n\n  ngOnInit() {\n  }\n\n  signin(form){\n    this.http.setForm(form.value)\n    this.router.navigateByUrl('/part2')\n  }\n}\n","module.exports = \"\"","module.exports = \"<form #formpart2=\\\"ngForm\\\" (ngSubmit)=\\\"signin(formpart2)\\\">\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputEmail3\\\" class=\\\"col-sm-2 col-form-label\\\">From</label>\\n    <div class=\\\"col-sm-5\\\">\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"inputEmail3\\\" placeholder=\\\"From\\\" ngModel name=\\\"from\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">To</label>\\n    <div class=\\\"col-sm-5\\\">\\n      <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"To\\\" ngModel name=\\\"to\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Email ID</label>\\n    <div class=\\\"col-sm-5\\\">\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"Email ID\\\" ngModel name=\\\"emailId\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Number of tickets</label>\\n    <div class=\\\"col-sm-5\\\">\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"Number of Tickets\\\" ngModel name=\\\"numberOfTickets\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-2 col-form-label\\\">Age</label>\\n    <div class=\\\"col-sm-5\\\">\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputPassword3\\\" placeholder=\\\"Age\\\" ngModel name=\\\"age\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"form-group row\\\">\\n    <div class=\\\"col-sm-10\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-forminput2',\n  templateUrl: './forminput2.component.html',\n  styleUrls: ['./forminput2.component.css']\n})\nexport class Forminput2Component implements OnInit {\n\n\n  constructor(private router:Router,private http:HttpService) { }\n\n  ngOnInit() {\n  }\n\n  signin(form){\n      var formpart1 = this.http.getForm()\n      this.http.setForm({...formpart1,...form.value})\n      this.http.postService().subscribe(\n        res => {\n          console.log(res)\n          this.router.navigateByUrl('/feedback')\n        },\n        err => {\n            console.log(err)\n        }\n      )\n      \n  }\n\n}","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  form = {}\n\n  constructor(private http:Http){}\n\n    setForm(form){\n            this.form = form\n            console.log(this.form)\n    }\n    getForm(){\n        return this.form\n    }\n    postService(){\n        return this.http.post('/end',this.form)\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}